#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.60.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

reorder rootPrims = ["Root", "Cylinder"]

def Xform "Root"
{
    reorder nameChildren = ["keyShift", "Keyboard", "keyQ", "keyA", "keyS", "keyD", "keyF", "keyG", "keyH", "keyJ", "keyK", "keyL", "keyZ", "keyX", "keyDelete", "keySpace", "keyReturn", "keyPlaceHolder", "keyC", "keyV", "keyB", "keyN", "keyM", "keyW", "keyE", "keyR", "keyT", "keyY", "keyU", "keyI", "keyO", "keyP"]
    def Cube "keyO" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/keyO/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.063, 0.008775554, -0.035)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyO/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cube "keyI" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/keyI/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.045, 0.008775554, -0.035)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyI/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cube "keyU" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/keyU/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.027, 0.008775554, -0.035)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyU/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cube "keyY" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/keyY/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.009, 0.008775554, -0.035)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyY/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cube "keyT" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/keyT/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.009, 0.008775554, -0.035)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyT/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cube "keyR" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/keyR/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.027, 0.008775554, -0.035)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyR/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cube "keyE" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/keyE/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.045, 0.008775554, -0.035)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyE/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cube "keyP" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/keyP/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.081, 0.008775554, -0.035)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyP/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cube "keyW" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/keyW/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.063, 0.008775554, -0.035)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyW/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cube "keyQ" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyQ/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.081, 0.008775554, -0.035)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyQ/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyA" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyA/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.072, 0.008775554, -0.017)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyA/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyS" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyS/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.054, 0.008775554, -0.017)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyS/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyD" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyD/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.036, 0.008775554, -0.017)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyD/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyF" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyF/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.018, 0.008775554, -0.017)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyF/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyG" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyG/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0, 0.008775554, -0.017)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyG/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyH" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyH/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.018, 0.008775554, -0.017)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyH/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyJ" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyJ/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.036, 0.008775554, -0.017)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyJ/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyK" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyK/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.054, 0.008775554, -0.017)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyK/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyL" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyL/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.072, 0.008775554, -0.017)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyL/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyC" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyC/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.019665657, 0.008775554, 0.001)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyC/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyV" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyV/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.0016656555, 0.008775554, 0.001)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyV/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyB" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyB/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.016334344, 0.008775554, 0.001)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyB/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyN" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyN/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.034334347, 0.008775554, 0.001)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyN/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyM" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyM/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (0.052334346, 0.008775554, 0.001)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyM/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyZ" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyZ/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.055665657, 0.008775554, 0.001)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyZ/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cube "keyX" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["DefaultMaterial", "HierarchicalFade", "GroundingShadow"]
        rel material:binding = </Root/keyX/DefaultMaterial>
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.07, 0.010000001, 0.07)
        float3 xformOp:translate = (-0.037665658, 0.008775554, 0.001)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyX/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.40050548, 0.84196645, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
            float opacity = 1
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }

        def RealityKitComponent "ImageBasedLight"
        {
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }
    }

    def Cylinder "keyShift" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/keyShift/DefaultMaterial>
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.08, 0.01, 0.08)
        float3 xformOp:translate = (-0.07652758, 0.00878, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/keyShift/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.575523, 1, 0.5202485) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cube "Keyboard" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["keyQ", "DefaultMaterial"]
        rel material:binding = </Root/Keyboard/DefaultMaterial>
        double size = 0.2
        float3 xformOp:scale = (0.9, 0.05, 0.5)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:surface.connect = </Root/Keyboard/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def Cylinder "keyDelete" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/keyDelete/DefaultMaterial>
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.1, 0.01, 0.08)
        float3 xformOp:translate = (0.07393801, 0.00878, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyDelete/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 0.34599826, 0.20466758) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cylinder "keySpace" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/keySpace/DefaultMaterial>
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.5, 0.01, 0.08)
        float3 xformOp:translate = (0, 0.00878, 0.019)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keySpace/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 0.9478669, 0.40333745) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cylinder "keyReturn" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/keyReturn/DefaultMaterial>
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.15, 0.01, 0.08)
        float3 xformOp:translate = (0.06900331, 0.00878006, 0.019)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyReturn/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.3175432, 0.52774644, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }

    def Cylinder "keyPlaceHolder" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/keyPlaceHolder/DefaultMaterial>
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.15, 0.01, 0.08)
        float3 xformOp:translate = (-0.06912674, 0.00878006, 0.019)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            token outputs:surface.connect = </Root/keyPlaceHolder/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.3175432, 0.52774644, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "HierarchicalFade"
        {
            uniform token info:id = "RealityKit.HierarchicalFade"
        }

        def RealityKitComponent "GroundingShadow"
        {
            bool enableIBLShadow = 1
            bool enableMeshShadow = 1
            uniform token info:id = "RealityKit.GroundingShadow"
        }
    }
}

